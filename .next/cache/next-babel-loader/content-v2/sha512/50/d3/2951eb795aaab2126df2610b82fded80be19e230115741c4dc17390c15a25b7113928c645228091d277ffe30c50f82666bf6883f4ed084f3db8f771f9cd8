{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport default async function getAllPokemons() {\n  try {\n    const response = await fetch(\"https://pokeapi.co/api/v2/pokemon/?limit=151&offset=0\");\n    const {\n      results\n    } = await response.json();\n    const pokemons = results.map((pokemon, i) => {\n      const key = i;\n      const id = i + 1;\n      const image = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`;\n      return _objectSpread(_objectSpread({\n        id\n      }, pokemon), {}, {\n        image\n      });\n    });\n    return {\n      props: {\n        pokemons\n      }\n    };\n  } catch (err) {\n    console.error(err);\n  }\n}","map":{"version":3,"sources":["D:/Users/gonza/Desktop/react-next/utils/getPokemons.js"],"names":["getAllPokemons","response","fetch","results","json","pokemons","map","pokemon","i","key","id","image","props","err","console","error"],"mappings":";;;;;;AAAA,eAAe,eAAeA,cAAf,GAAgC;AAC7C,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uDAAD,CAA5B;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAc,MAAMF,QAAQ,CAACG,IAAT,EAA1B;AACA,UAAMC,QAAQ,GAAGF,OAAO,CAACG,GAAR,CAAY,CAACC,OAAD,EAAUC,CAAV,KAAgB;AAC3C,YAAMC,GAAG,GAAGD,CAAZ;AACA,YAAME,EAAE,GAAGF,CAAC,GAAG,CAAf;AACA,YAAMG,KAAK,GAAG,mGAAkGD,EAAG,MAAnH;AACA;AACEA,QAAAA;AADF,SAEKH,OAFL;AAGEI,QAAAA;AAHF;AAKD,KATgB,CAAjB;AAUA,WAAO;AACLC,MAAAA,KAAK,EAAE;AAAEP,QAAAA;AAAF;AADF,KAAP;AAGD,GAhBD,CAgBE,OAAOQ,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF","sourcesContent":["export default async function getAllPokemons() {\r\n  try {\r\n    const response = await fetch(\"https://pokeapi.co/api/v2/pokemon/?limit=151&offset=0\");\r\n    const { results } = await response.json();\r\n    const pokemons = results.map((pokemon, i) => {\r\n      const key = i;\r\n      const id = i + 1;\r\n      const image =`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`;\r\n      return {\r\n        id,\r\n        ...pokemon,\r\n        image\r\n      };\r\n    })\r\n    return {\r\n      props: { pokemons }\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}