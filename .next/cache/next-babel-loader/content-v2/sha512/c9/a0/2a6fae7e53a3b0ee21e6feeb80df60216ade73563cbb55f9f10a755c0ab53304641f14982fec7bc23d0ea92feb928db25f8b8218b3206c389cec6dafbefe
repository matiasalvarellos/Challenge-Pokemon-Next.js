{"ast":null,"code":"import _regeneratorRuntime from \"D:/Users/gonza/Desktop/react-next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"D:/Users/gonza/Desktop/react-next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"D:/Users/gonza/Desktop/react-next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport default function getAllPokemons() {\n  return _getAllPokemons.apply(this, arguments);\n}\n\nfunction _getAllPokemons() {\n  _getAllPokemons = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var response, _yield$response$json, results, pokemons;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return fetch(\"https://pokeapi.co/api/v2/pokemon/?limit=151&offset=0\");\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return response.json();\n\n          case 6:\n            _yield$response$json = _context.sent;\n            results = _yield$response$json.results;\n            pokemons = results.map(function (pokemon, i) {\n              var id = i + 1;\n              var image = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/\".concat(id, \".png\");\n              return _objectSpread(_objectSpread({\n                id: id\n              }, pokemon), {}, {\n                image: image\n              });\n            });\n            return _context.abrupt(\"return\", {\n              props: {\n                pokemons: pokemons\n              }\n            });\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 12]]);\n  }));\n  return _getAllPokemons.apply(this, arguments);\n}","map":{"version":3,"sources":["D:/Users/gonza/Desktop/react-next/utils/getPokemons.js"],"names":["getAllPokemons","fetch","response","json","results","pokemons","map","pokemon","i","id","image","props","console","error"],"mappings":";;;;;;;;AAAA,wBAA8BA,cAA9B;AAAA;AAAA;;;6EAAe;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEYC,KAAK,CAAC,uDAAD,CAFjB;;AAAA;AAELC,YAAAA,QAFK;AAAA;AAAA,mBAGeA,QAAQ,CAACC,IAAT,EAHf;;AAAA;AAAA;AAGHC,YAAAA,OAHG,wBAGHA,OAHG;AAILC,YAAAA,QAJK,GAIMD,OAAO,CAACE,GAAR,CAAY,UAACC,OAAD,EAAUC,CAAV,EAAgB;AAC3C,kBAAMC,EAAE,GAAGD,CAAC,GAAG,CAAf;AACA,kBAAME,KAAK,6GAAqGD,EAArG,SAAX;AACA;AACEA,gBAAAA,EAAE,EAAFA;AADF,iBAEKF,OAFL;AAGEG,gBAAAA,KAAK,EAALA;AAHF;AAKD,aARgB,CAJN;AAAA,6CAaJ;AACLC,cAAAA,KAAK,EAAE;AAAEN,gBAAAA,QAAQ,EAARA;AAAF;AADF,aAbI;;AAAA;AAAA;AAAA;AAiBXO,YAAAA,OAAO,CAACC,KAAR;;AAjBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["export default async function getAllPokemons() {\r\n  try {\r\n    const response = await fetch(\"https://pokeapi.co/api/v2/pokemon/?limit=151&offset=0\");\r\n    const { results } = await response.json();\r\n    const pokemons = results.map((pokemon, i) => {\r\n      const id = i + 1;\r\n      const image =`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`;\r\n      return {\r\n        id,\r\n        ...pokemon,\r\n        image\r\n      };\r\n    })\r\n    return {\r\n      props: { pokemons }\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}